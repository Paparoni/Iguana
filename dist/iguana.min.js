class Iguana{constructor(){this.List=List,this.HTTP=HTTP}}class List extends Array{constructor(){super(),this.origin=[];for(let a=0;a<arguments.length;a++)this[a]=arguments[a],this.origin.push(arguments[a])}delete(a){this.splice(this.indexOf(a),1)}shuffle(){var a=Math.floor;if(0===arguments.length)return this[a(Math.random()*this.length)];if(1<arguments.length)throw new Error("Shuffle function only allows a single argument.");else{let b=new List,c=new List;this.forEach(function(a){c.push(a)});for(let d,e=0;e<arguments[0];e++)d=c[a(Math.random()*c.length)],b.push(d),c.delete(d);return b}}}class HTTP{constructor(a){this.server=a;let b=new Function("try {return this===global;}catch(e){return false;}");if(b())throw new Error("HTTP Class not availiable in a node environment.")}request(a){let b=this.server;return a=a||{},new Promise(function(c,d){let e=new XMLHttpRequest;if(e.onreadystatechange=function(){4==e.readyState&&200==e.status&&c(e.responseText),e.onerror=function(){d(new Error("Something with wrong. Status: "+e.status))}},e.open("GET",b,!0),0!==Object.keys(a).length){let b="",c="";for(let d in Object.keys(a))b=d,c=a[d];e.setRequestHeader(b,c)}e.send(null)})}}module.exports=Iguana;