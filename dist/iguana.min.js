class Iguana{constructor(){this.List=List,this.HTTP=HTTP,this.isNode=isNode}}const isNode=function(){try{return this===global}catch(a){return!1}};class List extends Array{constructor(){super();let a=[];for(let b=0;b<arguments.length;b++)this[b]=arguments[b],a.push(arguments[b]);Object.defineProperty(this,"origin",{value:a,writable:!1})}delete(a){this.splice(this.indexOf(a),1)}limit(a,b){let d=0;if(this.forEach(function(b){b==a&&d++}),d>b){let c=Math.abs(d-b);for(let b=0;b<c;b++)this.delete(a)}}intersection(a){let b=new List,c=this;return a.forEach(function(a){c.includes(a)&&b.push(a)}),b}shuffle(){var a=Math.floor;if(0===arguments.length)return this[a(Math.random()*this.length)];if(1<arguments.length)throw new Error("Shuffle function only allows a single argument.");else{let b=new List,c=new List;this.forEach(function(a){c.push(a)});for(let d,e=0;e<arguments[0];e++)d=c[a(Math.random()*c.length)],b.push(d),c.delete(d);return b}}}class HTTP{constructor(a){this.server=a;if(function(){try{return this===global}catch(a){return!1}}())throw new Error("HTTP Class not availiable in a node environment.")}request(a){let b=this.server;return a=a||{},new Promise(function(c,d){let e=new XMLHttpRequest;if(e.onreadystatechange=function(){4==e.readyState&&200==e.status&&c(e.responseText),e.onerror=function(){d(new Error("Something with wrong. Status: "+e.status))}},e.open("GET",b,!0),0!==Object.keys(a).length){let b="",c="";for(let d in Object.keys(a))b=d,c=a[d];e.setRequestHeader(b,c)}e.send(null)})}post(a,b){let c=this.server;return b=b||{},a=a||"",new Promise(function(d,e){let f=new XMLHttpRequest;if(f.open("POST",c,!0),0!==Object.keys(b).length){let a="",c="";for(let d in Object.keys(b))a=d,c=b[d];f.setRequestHeader(a,c)}f.onreadystatechange=function(){4==f.readyState&&200==f.status&&d(f.responseText),f.onerror=function(){e(new Error("Error submitting post request "))}},0<a.length&&f.send(a)})}}isNode()&&(module.exports=Iguana);